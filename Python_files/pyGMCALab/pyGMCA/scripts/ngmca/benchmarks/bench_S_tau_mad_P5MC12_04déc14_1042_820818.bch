(dp1
S'_type'
p2
(S'mean'
S'std'
S'median'
tp3
sS'_file_string'
p4
S'# -*- coding: utf-8 -*-\nfrom pygmca import bss\nimport numpy as np\n\n\n# settings which are passed to the data_generator\n# exactly one tuple is allowed between variables data_settings and\n# algorithm_settings (below). This tuple contains the values on which to\n# perform the benchmark (bench variable)\ndata_settings = {\'rows\': 24,\n                 \'rank\': 12,\n                 \'dB\': 20,\n                 \'S_tau_mad\': (0, 0.5, 1, 2, 3)}\n\n# settings which are passed to all the algorithms\n# exactly one tuple is allowed between variables data_settings and\n# algorithm_settings (below). This tuple contains the values on which to\n# perform the benchmark\nalgorithm_settings = {"maximum_iteration": 200}\n\n# dictionary of algorithms to be used for the benchmark\nalgorithms = {"nGMCA": bss.gmca.Ngmca(),\n              "nGMCA_framework": bss.gmca.Framework({\n                  \'A_updater\': bss.gmca.SparseUpdater(tau_mad=0)})}\n\n\ndef provide_tau_mad(data_settings, reference):\n    # set up tau_mad for different algoriths\n    tau_mad = data_settings["S_tau_mad"]\n    from pygmca import bss # not convenient, but works\n    return {\'S_updater\': bss.gmca.SparseUpdater(tau_mad=tau_mad),\n            \'S_parameters\': {"tau_mad":tau_mad}}\n\n# settings for the processing of the benchmark, including;\n# - the number of repetitions for each point of the bench variable.\n# - the criteria to be saved (all the criteria must be computed by\n#       the bss.tools.evaluatuation function, to add a criterion, modify\n#       this function)\n# - data_generator: the function which creates the data\n# - display: if the field is present, results will be displayed during the\n#       computation. It can take arguments for the display function.\n# - additional_inputs: function which returns a dictionary which will be \n#       appended to the parameters. This can be useful for providing data\n#       dependant settings, or more complex input parameters.\nprocessing_settings = {"number_of_repetitions": 12,\n                       "criteria": ["SDR_S", "SIR_S", "SNR_S", "SAR_S",\n                                    "SDR_A", "SIR_A", "SNR_A", "SAR_A"],\n                       "data_generator": bss.tools.create_realistic_nmr_mixtures,\n                       "additional_inputs": provide_tau_mad,\n                       "display": {}}\n\n'
p5
sS'_bench_variable'
p6
S'S_tau_mad'
p7
sS'_num_points'
p8
I5
sS'_end_time'
p9
NsS'results'
p10
cnumpy.core.multiarray
_reconstruct
p11
(cnumpy
ndarray
p12
(I0
tS'b'
tRp13
(I1
(I5
I2
I8
I3
tcnumpy
dtype
p14
(S'f8'
I0
I1
tRp15
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\xab+\xbb^_\x15-@fw\xea\xc7CS\x01@\xba\xd1\x83\xc7)\xef-@\x07%\xfa\xa4\xa0\xcd0@\xbb\x13\x06\xdf\x9c\xb1\x03@8N\xeb\xe1%)1@i\x13ioF 8@\xd4\xe8\xddL/o\xe9?|\t.\xaa\x1eH8@t!\xe2;\xd8i6@\x15\xca\x13\xaf\xd9\x06\xfb?B\xa8\xa3l\xf2\xb46@&\x93j=\xce\xa11@#/L\x11\xb4\xa4\xfe?&w\x1e\xf1\x7fR1@R8\xf8\x1c\xa3\xc51@\xadu\xaa\xcb\x99\xd2\xfe?^\xa2\x15\xf6\xa7q1@9\x10\xa4\xbb\xcf\xc6A@\x7f\xd0\xb8\x10-\x1b\xfe?z\x04\xc2\xc2\x9f\xecA@\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf0\x7f\t\xa2\xd5\x87\xce\x1b\x1b@~\x03\xa8\x98\xbb\xb6\x08@*\x01\xdc)\xa2I\x1c@g\x08\x87\x96\xd6K\x1d@\x8d_\xf1\xf4\xbb!\x0b@\x06\xc7mNaV\x1e@ae\xc0\xa8\x91\xb77@~\x1b\x91\x04\x12\x17\xe3?\xbe"\xf2S\x13\xe57@\xab\xab\x97\xe8\xe9t7@\x15\xc4\xab\n\xcb`\xe3?\x98\x81\xc9\x0c?w7@\xf0i\xad\x88\xa5\x8d\x1f@\xf4\xd7\x1a\x96\x15\x97\t@\xf6\xd5\xac\xd03\xc4\x1f@\x19\xee\x0e\xcd\xa1\' @m\x17\xe6\x04rC\t@\xcc\xe0%G\x17# @\x13\xba\x11\xd7[\x7f9@\xf4\xa8\x8dB\xecx\x10@\xac\xdckk\xe8H:@\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf0\x7fk\x81\'9\x8a?0@$\x9b\xeb7\x0c\xa1\x0b@\xf0W\r\x11\xc7\x8f.@<Kby\xc2\xd34@@-\x06\\l<\x12@\xf0O\xa4\x16A<3@\x97\x85\x95\x9f\\\xa1:@\xa8E=)}\x00\xe9?RA\xa9\xee\x0e~:@\xed\xb7\x93\x05\xc2T5@\xd5\xdd\x90\'\xc4Y\x03@h\x93Uf<}5@\x95\xd1Ga\x1b\xa07@\xd4\xc9\x8e\x9bC\xcf\x06@F\x18c\xd7\x8a\xc46@-\xbf}:\xf8\xd87@\xf9r|\xb8\x1bz\x07@\x9e\xf9\x17\x06\xf1\x027@+\xabT\x7f\x0f\xebC@\x97#||\xe3J\xf1?k\xc4\x90C[\x12D@\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf0\x7f=\x18(`:i0@2\xa0\x85\x1d\x05e\t@:iS\xcc.\x030@\xca^Px\x81!4@\xfe\xb8\x0c\xe2~\x80\x13@u\nJ\x86^U3@\x87/Cn\x97\xfb8@\xa8\x08\xd1\xcf\xeb\xfb\xf7?d\x02\x078/c8@\xff\x96\xb5F^\xb55@X\x08\x83\xa9\x08+\xf9?t?\xe4\x81\x98"5@\x00\x02,C\x0f\xd15@\x13\xa5<D\xf6\xf5\x10@\x06\x14Un\xcd\x8e5@H1\xb7^%\x156@\x01P5\xc4\xc0V\x11@\xa0\xab\x10\xe0P\xcd5@qp\xbeo\x84\xe7A@gx)Y95\x08@\x9c\xc8\xd2\xa9VdA@\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf0\x7f\xd9\x17\xeap\x08:0@V\n\x9et\xf3}\x0f@FW5\xb1}\x81,@\xc3O\xde\'\xce\xb25@;\xa1\xad\xd9\x90+\x15@\x14Z\xe6o\xa0]3@pS\xc3\xf3\xc6\xd7<@\x11\xb5\xdb\xfe\'\xc9\xf2?\xd0FK\xe6\xa6\xad<@\xe3\xac\x99f\xe5\x015@!8\x91\xff\x11\xa5\x02@\xae\xa5\x1c\x97c\xdb3@S\xcf\xacH\r*:@\x040\x1aA\'\x0f\x02@\xa4\x80m\x7f\x9b\xd79@\xeb\x07\xde\x8e;\x8f:@:(_\xe9\x1f\xda\x02@\x88E\x1e\xb1\xd53:@\xdb\x87e\xf0s\xddD@\xbco\x9355g\xe8?a\xa5\x90+N\xd2D@\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf0\x7f0\xc1\x99\xfe\x0b\xaf0@<X\xbd\x9b\xe3\xb6\x0f@R\xeb\xafZz\xe2.@\x82\xbd\x87\xaf\x7f\x1a5@</\xe0b\xffL\x19@D\xf8\x96\xc1\xcc_3@h\xcc6\xf5\x8d\xf4:@\xe9\xfeJ\x0e\xc5\x05\x03@6\x071}3\xce:@mn\xa2\x1e\x0e\x925@\x1cu\xd67\xd9y\x01@\xf1e\x04<]\xfb4@x}\x8c!O\x9a7@\xd4i*\x05\xa4\x1b\x14@h#\xe1\xfd\xe1\xef7@[\xb87\x80\xb0\xf57@?X=\xc0\'\xbd\x14@\xd8YPp\x9fI8@\xbb\xe6\x8b\xf5\x8d\xacB@\x04\xea\xab\xf5\xb2\xda\r@\x96\xa0\xf1\x16\x911B@\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf0\x7f\xcf\xf2\xf7\x8f\xa0\xe5.@\x08Y8\xc3\x87\xd4\n@\xfd\xc7\xe1\x039\xd0,@\x9d_\xee\xcfi\xa05@L\xbb\x89%F\xf8\x14@Z\x7fD]s\xa83@\xcay\xbe\x1f!\x06@@Y\xb3U\x1bl\x95\xf2?\xc2G/L\x02\x86?@\xc9IwPB\x9c3@\x0b\xb0\xbfL7\xb8\xff?8\x82d\x98p\xd82@]\xe1\xeb3\xe8\x909@m\xc0Zs\xc2y\x08@,\x04\xb1\xf9\xc7f9@\xc9\xcd\xf7\xf7\x8c4:@2\x9by\xc6\xd1\xec\t@\xba\xces0\xd8\xff9@D\xb5P,\xbe\x11E@\xf9@Zv\xe5\xb1\xe0?\x9c\xd5\xa4\x86\xff\xfcD@\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf0\x7fx\xd8\x13\x1a\x10\xea1@\xbe\x9eV\x02\xfa\xa2\x05@\x05\x12Zd\x9b|1@\xcf\xf7\x9f\xd7\x8c}7@\x16Jxut5\x12@ \xb2?\xe8\xbcI6@\x1d\xdff^\xcf\xa4>@\xd2{G\xdf\x12\x16\x04@\xd4\x816&\xd2\x18=@\x7f\xf7\xb5\xa7\x84f5@d\xc1T80\xd3\xf8?^YI&\xcb\xd84@\x7f\xec\xf9`\x0c"8@G\xd2\xb8k?\xdf\t@\x86\x1e\xcb\x95W\x008@\x80h\x93\xa4:\x8a8@>Q<s\x00q\x0b@\x88W\x9b\x9b\x9dO8@\x83\x19\x9c\xa5\x15"C@w\xb2\xddRo\xd8\x04@\x1e;\x12\x90\xe6\xe3B@\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf0\x7f\x88\xa9\xc4\xea\xba\xb8)@\xad\xd5$S\xbf\xf7\x14@\xf6\x89\x88\xa3\xe57*@\x94\x1d\xf6\xd9kZ3@\xd4\x16\xfaD\x02\t\x1c@\xb4\xea\x86\xf82\xb52@T\xc47a\x85\xae@@\xae\x99ST\xe4\xe9\x00@x\x9f\x04L\x8c\xb6@@;\x15f^\x03\xdf1@s\x96F\xd6\xcc\x1b\x05@,\x11*\x17\xe4\xc21@M\xe9\x94\xb1\xf6\x9a6@5\x87\xdc\xf9)\xb5\x06@H\xaae\x85\x8b\x017@5\x80h4\x85\xef6@\r\x1d\x9c\x94\x0c\xca\x07@\xd6\x0e\xab\xce\x1fi7@i\xe1\x86\xf8\x8c]E@G(\xc9\x86\xa4C\xe8?\x0e\x1b\x0b\xf58cE@\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf0\x7f\x07b\x92\x19QU/@T\xee"\xfc\xad\x8a\n@\xb4\x15\xf55\xe2\xf5-@{\x96\x89\t&B5@d\x04;lK\xbe\x16@\t\xdbF\xcfK\xc43@\xc7\x03\xe2\xb3\xd4\x02@@b\x85\xd2\x13&\x95\x0b@\xacD\xa1Cx\x7f?@\xc7\xd7\xdb\xf10\x8b3@hL/\xe9A}\x02@l\x90r\x02&53@\x14\x1aYc\x12\xb95@\x1b@\x9c\x8ck%\x0e@\xe2l\x80\x9f@\xf65@=a\x89\x91\x10\x036@\x16\x86a\xfdKq\x0f@H\xdcr\xd6 96@\r\xa1X5h0C@\xf6\xe9\x8b\r\xc2\x10\x10@Z\xb4\xab&\xa2\xcaB@\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf0\x7f'
tbsS'name'
p16
S'bench_S_tau_mad_P5MC12_04d\xc3\xa9c14_1042_820818.bch'
p17
sS'end_time'
p18
S'04d\xc3\xa9c14_1113'
p19
sS'_hash'
p20
I820818
sS'_algorithm_names'
p21
(lp22
S'nGMCA'
p23
aS'nGMCA_framework'
p24
asS'_num_repet'
p25
I12
sS'data_structure'
p26
S'n_points x n_algo x n_crit x [mean, std, med]'
p27
sS'_bench_values'
p28
(I0
F0.5
I1
I2
I3
tp29
sS'_criteria'
p30
(lp31
S'SDR_S'
p32
aS'SIR_S'
p33
aS'SNR_S'
p34
aS'SAR_S'
p35
aS'SDR_A'
p36
aS'SIR_A'
p37
aS'SNR_A'
p38
aS'SAR_A'
p39
as.